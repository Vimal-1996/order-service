spring.application.name=order-service
server.port=8084

spring.datasource.url=jdbc:mysql://localhost:3306/app_db
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver



# Circuit Breaker Settings
resilience4j.circuitbreaker.instances.vendorServiceCircuitBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.vendorServiceCircuitBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.vendorServiceCircuitBreaker.wait-duration-in-open-state=1000ms


# Retry settings (optional, not necessarily required for the circuit breaker to work)
resilience4j.retry.instances.vendorServiceCircuitBreaker.max-attempts=3
resilience4j.retry.instances.vendorServiceCircuitBreaker.wait-duration=1s

spring.kafka.template.default-topic=order-notification-topic
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.admin.client-id=kafka-admin




vendor.service.url = http://localhost:8085
customer.service.url = http://localhost:8082


